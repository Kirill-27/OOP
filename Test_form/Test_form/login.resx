<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>67</value>
  </metadata>
</root>